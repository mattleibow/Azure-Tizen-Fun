strategy:
  matrix:
    macos:
      IMAGE_NAME: Hosted macOS High Sierra
    macos2:
      IMAGE_NAME: Hosted macOS
    windows2017:
      IMAGE_NAME: Hosted VS2017
    windows2019:
      IMAGE_NAME: Hosted Windows 2019 with VS2019
    linux:
      IMAGE_NAME: Hosted Ubuntu 1604

pool:
  name: $(IMAGE_NAME)

steps:
  - pwsh: apt update && apt install libxcb-icccm4 libxcb-render-util0 gettext libwebkitgtk-1.0-0 libxcb-image0 libsdl1.2debian libv4l-0 libxcb-randr0 bridge-utils openvpn
    condition: eq(variables['System.JobName'], 'linux')
  - pwsh: .\install-openjdk.ps1
    displayName: Install the OpenJDK
  - pwsh: .\install-tizen.ps1
    displayName: Install the Tizen SDK
  - task: PublishBuildArtifacts@1
    condition: and(always(), startsWith(variables['System.JobName'], 'windows'))
    inputs:
      pathToPublish: '$(USERPROFILE)/.package-manager/install-log/package-manager'
      artifactName: '$(System.JobName)-package-manager-install-log'
  - task: PublishBuildArtifacts@1
    condition: and(always(), not(startsWith(variables['System.JobName'], 'windows')))
    inputs:
      pathToPublish: '$(HOME)/.package-manager/install-log/package-manager'
      artifactName: '$(System.JobName)-package-manager-install-log'
