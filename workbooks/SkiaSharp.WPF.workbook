---
uti: com.xamarin.workbook
id: 66b3be4b-ee9f-45f2-875c-670508c1c26e
title: SkiaSharp on WPF
platforms:
- WPF
packages:
- id: SkiaSharp
  version: 1.60.2
- id: SkiaSharp.Views
  version: 1.60.2
---

# SkiaSharp on WPF Workbook

Welcome to SkiaSharp, the most awesome, cross-platform 2D-graphics engine. It is powered by the same engine that powers Android and Chrome.

After installing the `SkiaSharp` NuGet package, we must make sure that the references have been added:

```csharp
#r "SkiaSharp"
```

Because we going to do some UI work, we also need to add the `SkiaSharp.Views` package. This package contains all the bits needed for all supported platforms. After installing the package, we add the references:

```csharp
#r "SkiaSharp.Views.Desktop"
#r "SkiaSharp.Views.WPF"
```

Now SkiaSharp is installed, so we can add all our using statements:

```csharp
// SkiaSharp usings
using SkiaSharp;
using SkiaSharp.Views.Desktop;
using SkiaSharp.Views.WPF;

// WPF usings
using System.Windows;
```

We are finally ready to start coding. The first thing we need to do is to add the SkiaSharp UI element to the window. To do this, we need to get this main window:

```csharp
var mainWindow = new Window {
    Width = 512,
    Height = 512,
    Title = "SkiaSharp on WPF"
};
mainWindow.Show();
```

Next, we need to create the SkiaSharp element and add it to the window:

```csharp
// create the element
var skiaCanvasElement = new SKElement();

// add it to the window
mainWindow.Content = skiaCanvasElement;
```

Now that we have our windows and the SkiaSharp element, we can start writing drawing code. The first thing we need to do is handle the `PaintSurface` event:

```csharp
skiaCanvasElement.PaintSurface += OnPaintSurface;

void OnPaintSurface(object sender, SKPaintSurfaceEventArgs e)
{
    var canvas = e.Surface.Canvas;
    var size = e.Info.Size;

    canvas.Clear(SKColors.Transparent);

    var paint = new SKPaint {
        IsAntialias = true,
        TextSize = 50,
        TextAlign = SKTextAlign.Center,
        Color = 0xFF3498DB,
        Style = SKPaintStyle.Fill,
        Typeface = SKTypeface.FromFamilyName("Trebuchet")
    };

    canvas.DrawText(
        "SkiaSharp", 
        size.Width / 2, 
        (size.Height + paint.TextSize) / 2, 
        paint);
}

// trigger a refresh
skiaCanvasElement.InvalidateVisual();
```

And that is it for today!